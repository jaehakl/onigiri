#/etc/nginx/sites-available/app.conf

# =========================
# HTTP : 80
# =========================

# apex(온리) → www 리다이렉트 + ACME
server {
    listen 80;
    listen [::]:80;
    server_name onigiri.kr;

    # HTTP-01 (webroot 방식 사용 시)
    location ^~ /.well-known/acme-challenge/ { root /var/www/letsencrypt; }

    return 301 https://www.onigiri.kr$request_uri;
}

# www → HTTPS 리다이렉트 + ACME
server {
    listen 80;
    listen [::]:80;
    server_name www.onigiri.kr;

    # HTTP-01 (webroot 방식 사용 시)
    location ^~ /.well-known/acme-challenge/ { root /var/www/letsencrypt; }

    return 301 https://www.onigiri.kr$request_uri;
}

# =========================
# HTTPS : 443
# =========================

# apex(온리) → www 리다이렉트
#  └ HTTPS 접속 시에도 인증서 제시 후 리다이렉트가 필요하므로
#     같은 인증서를 설정해 둡니다.
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name onigiri.kr;

    # ⚠ 인증서 경로: certbot이 첫 번째 -d 값 폴더명을 씁니다.
    # 보통 /etc/letsencrypt/live/onigiri.kr/ 또는 /etc/letsencrypt/live/www.onigiri.kr/
    ssl_certificate     /etc/letsencrypt/live/onigiri.kr/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/onigiri.kr/privkey.pem;

    return 301 https://www.onigiri.kr$request_uri;
}

# 메인 서비스 (www.onigiri.kr)
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name www.onigiri.kr;

    # ⚠ 인증서 경로(위와 동일 폴더 사용)
    ssl_certificate     /etc/letsencrypt/live/onigiri.kr/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/onigiri.kr/privkey.pem;

    # -------------------------
    # (선택) 간단한 DDoS 완화
    # 아래 두 줄은 /etc/nginx/conf.d/ratelimit.conf 에
    #   limit_req_zone / limit_conn_zone
    # 를 미리 선언해 두었을 때만 유효합니다.
    # 선언이 없다면 이 두 줄은 주석 처리하세요.
    # -------------------------
    limit_req  zone=req_per_ip burst=200 nodelay;
    limit_conn conn_per_ip 40;

    # 업로드 크기 제한 등
    client_max_body_size 16m;

    # 정적 파일 루트 (Vite dist)
    root /var/www/app/dist;
    index index.html;

    # 정적 에셋 캐싱
    location ~* \.(?:js|css|png|jpg|jpeg|gif|svg|ico|woff2?)$ {
        try_files $uri =404;
        expires 7d;
        add_header Cache-Control "public, max-age=604800, immutable";
    }

    # API 프록시 → FastAPI(Uvicorn)
    location /api/ {
        proxy_set_header Host              $host;
        proxy_set_header X-Real-IP         $remote_addr;
        proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto https;

        proxy_pass http://127.0.0.1:8000/;
        proxy_read_timeout 60s;
    }

    # SPA fallback
    location / {
        try_files $uri $uri/ /index.html;
    }

    # 보안 헤더(필요 시 조정)
    add_header X-Content-Type-Options nosniff;
    add_header X-Frame-Options SAMEORIGIN;
    add_header Referrer-Policy no-referrer-when-downgrade;
    add_header X-XSS-Protection "1; mode=block";
}
